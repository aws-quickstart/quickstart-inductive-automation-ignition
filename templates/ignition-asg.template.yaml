AWSTemplateFormatVersion: '2010-09-09'
Description: "This templates sets up Ignition software on Amazon EC2 instances (qs-1t800lbfl)"
Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - E9101
        - W9002
        - W9003
  LICENSE: Apache License Version 2.0
Parameters:
  LatestAmazonLinux2Id:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    Description: Latest Amazon Linux 2 AMI ID from AWS Systems Manager Parameter Store.
  BastionSecurityGroupID:
    Description: ID of the bastion host security group to enable SSH connections (e.g.,
      sg-7f16e910). Empty value indicates bastion security group is not used.
    Default: ""
    Type: String
  Subnet1ID:
    Description: The ID of the private subnet in Availability Zone 1.
    Type: 'AWS::EC2::Subnet::Id'
  Subnet2ID:
    Description: The ID of the private subnet in Availability Zone 2.
    Type: 'AWS::EC2::Subnet::Id'
  VPCID:
    Description: "ID of the VPC you are deploying Aurora into (e.g., vpc-0343606e)."
    Type: 'AWS::EC2::VPC::Id'
    Default: ''
  KeyPairName:
    ConstraintDescription: "Name of an existing EC2 key pair."
    Description: Name of an existing public/private key pair, for connecting to your instance.
    Type: "AWS::EC2::KeyPair::KeyName"
  IgnitionInstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
    ConstraintDescription: Must contain valid instance type
    Default: m5.large
    Description: Amazon EC2 instance type for the Ignition instances.
    Type: String
  IgnitionNodesDesiredCapacity:
    Default: '2'
    Description: The desired capacity for Ignition nodes in the Auto Scaling group.
    Type: String
  IgnitionNodesMaxSize:
    Default: '4'
    Description: The maximum number of Ignition nodes in the Auto Scaling group.
    Type: String
  IgnitionNodesMinSize:
    Default: '2'
    Description: The minimum number of Ignition nodes in the Auto Scaling group.
    Type: String
  OperatorEmail:
    AllowedPattern: ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    ConstraintDescription: Must be a valid email address.
    Description: Email address that notifications of any scaling operations will be
      sent to.
    Type: String
  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Default: aws-quickstart
    Description: "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Default: quickstart-inductive-automation-ignition/
    Description: "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Type: String
Conditions:
  UseBastionSG: !Not
    - !Equals
      - !Ref 'BastionSecurityGroupID'
      - ''
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
Resources:
  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref 'OperatorEmail'
          Protocol: email
  IgnitionInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy'
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:GetObject
                Resource: !Sub
                  - arn:${AWS::Partition}:s3:::${S3Bucket}/${QSS3KeyPrefix}*
                  - S3Bucket: !If
                      - UsingDefaultBucket
                      - !Sub '${QSS3BucketName}-${AWS::Region}'
                      - !Ref 'QSS3BucketName'
                Effect: Allow
          PolicyName: aws-quick-start-s3-policy
  IgnitionInstanceRoleProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref 'IgnitionInstanceRole'
  IgnitionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access to the Workload instances
      VpcId: !Ref 'VPCID'
      SecurityGroupIngress:
        - !If
          - UseBastionSG
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            SourceSecurityGroupId: !Ref 'BastionSecurityGroupID'
          - !Ref 'AWS::NoValue'
  IgnitionASLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          quickstart:
            - install
            - configure
            - cleanup
        install: { }
        configure: { }
        cleanup: { }
    Properties:
      KeyName: !Ref 'KeyPairName'
      ImageId: !Ref 'LatestAmazonLinux2Id'
      InstanceMonitoring: true
      IamInstanceProfile: !Ref 'IgnitionInstanceRoleProfile'
      InstanceType: !Ref 'IgnitionInstanceType'
      SecurityGroups:
        - !Ref 'IgnitionSecurityGroup'
      UserData: !Base64
        Fn::Sub: |
            #!/bin/bash -ex
            echo "Hello world"

            # Signal the status from cfn-init
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource IgnitionAutoScalingGroup --region ${AWS::Region}
  WebServerTargetTrackingScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref 'IgnitionAutoScalingGroup'
      Cooldown: '60'
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 75.0
  IgnitionAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !Ref 'Subnet1ID'
        - !Ref 'Subnet2ID'
      Cooldown: '600'
      DesiredCapacity: !Ref 'IgnitionNodesDesiredCapacity'
      HealthCheckGracePeriod: 600
      HealthCheckType: EC2
      LaunchConfigurationName: !Ref IgnitionASLaunchConfig
      MaxSize: !Ref 'IgnitionNodesMaxSize'
      MinSize: !Ref 'IgnitionNodesMinSize'
      NotificationConfigurations:
        -
          TopicARN: !Ref 'NotificationTopic'
          NotificationTypes:
            - autoscaling:EC2_INSTANCE_LAUNCH
            - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
            - autoscaling:EC2_INSTANCE_TERMINATE
            - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
            - autoscaling:TEST_NOTIFICATION
      Tags:
        - Key: Name
          Value: Autodesk Ignition Instance
          PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Count: !Ref 'IgnitionNodesDesiredCapacity'
        Timeout: PT2H
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        PauseTime: PT1M
        SuspendProcesses:
          - HealthCheck
          - ReplaceUnhealthy
          - AZRebalance
          - AlarmNotification
          - ScheduledActions